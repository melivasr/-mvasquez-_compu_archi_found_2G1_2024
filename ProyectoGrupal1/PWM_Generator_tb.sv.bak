module PWM_Generator_tb();

    // Declarar las señales de entrada y salida
    logic clk, pwm_out;
    logic [1:0] duty_cycle;

    // Instanciar el módulo bajo prueba
    PWM_Generator dut (
        .clk(clk),
        .duty_cycle(duty_cycle),
        .pwm_out(pwm_out)
    );

    // Generar el reloj
    always begin
        clk = 0;
        #5 clk = 1;
        #5 clk = 0;
    end

    // Probar diferentes valores de duty_cycle
    initial begin
        duty_cycle = 0;
        #100;
        duty_cycle = 1;
        #100;
        duty_cycle = 2;
        #100;
        duty_cycle = 3;
        #100;
        $finish;
    end

    // Verificar la salida pwm_out
    always @(posedge clk) begin
        if (duty_cycle == 0) begin
            assert (pwm_out == 0);
        end else if (duty_cycle == 1) begin
            assert (pwm_out == 1);
        end else if (duty_cycle == 2) begin
            assert (pwm_out == 1);
        end else if (duty_cycle == 3) begin
            assert (pwm_out == 1);
        end
    end

endmodule;